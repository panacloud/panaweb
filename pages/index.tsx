import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { type } from "os";
import { FormEvent, useEffect, useState } from "react";
import styles from "../styles/Home.module.css";
import { Web3Wallets } from "../web3Wallet/Web3Wallets";

const Home: NextPage = () => {
  const wallet = new Web3Wallets("metamask",{
    rpcUrl:"https://mainnet.infura.io/v3/62687d1a985d4508b2b7a24827551934"
  });
  const [accounts, setAccounts] = useState<string[] | undefined>();
  const [msg, setMsg] = useState<string>("");

  const handleConnect = async () => {
    try {
      const accounts = await wallet.connect();
      console.log("wallet connected ---->", accounts);
      if (accounts.length) {
        setAccounts(accounts);
      }
    } catch (error) {
      console.log("error in connecting wallet ", error);
    }
  };

  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    try {
      const signature = await wallet.sign(msg);
      console.log("wallet signature --->", signature);
    } catch (err) {
      console.log("------ signature approval rejected ------ ", err);
    }
  };

  const handleChangeNetwork = async () => {
    await wallet.changeNetwork({
      chainId: "0x13881",
      rpcUrls: ["https://rpc-mumbai.matic.today"],
      chainName: "Matic Mumbai",
      nativeCurrency: {
        name: "MATIC",
        symbol: "MATIC",
        decimals: 18,
      },
      blockExplorerUrls: ["https://mumbai.polygonscan.com/"],
    });
  };

  useEffect(() => {
    wallet.on("accountsChanged", () => {
      setAccounts(undefined);
    });
    wallet.on("network", () => {
      console.log("network change ");
    });

    (async () => {
      try {
        const accounts = await wallet.getAccounts();
        console.log("connectes account --->", accounts);
        accounts.length ? setAccounts(accounts) : setAccounts(undefined);
      } catch (error) {
        console.log("error in getting account", error);
      }
    })();
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        {accounts && (
          <>
            <h4>your connected wallet address is : {accounts}</h4>
            <form onSubmit={handleSubmit}>
              <label>sign Msg:</label>
              <input
                type="text"
                value={msg}
                onChange={(e) => {
                  setMsg(e.target.value);
                }}
              />
              <button type="submit">Sign Msg</button>
            </form>
            <button onClick={handleChangeNetwork}>
              change network to polygon
            </button>
          </>
        )}

        {!accounts && (
          <>
            <button onClick={handleConnect}>connect metaMask</button>
          </>
        )}

        <p className={styles.description}>
          Get started by editing{" "}
          <code className={styles.code}>pages/index.tsx</code>
        </p>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/canary/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

export default Home;
